name: CI Pipeline

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ --cov=smolrouter --cov-report=xml --cov-report=term-missing -v --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: matrix.python-version == '3.12'
      with:
        files: ./coverage.xml
        fail_ci_if_error: true

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run ruff linting
      run: |
        python -m ruff check smolrouter/

    - name: Run vulture for dead code detection
      run: |
        # Avoid scanning virtualenv or conda folders
        vulture smolrouter/ --min-confidence 80 --exclude .venv --exclude venv --exclude .conda --exclude .cache

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run bandit security scan
      run: |
        bandit -r smolrouter/ -f json -o bandit-report.json || true
        bandit -r smolrouter/ --severity-level medium

    - name: Check dependencies for vulnerabilities
      run: |
        safety check --json || true
        safety check

  sonarqube:
    name: Code Quality Analysis (SonarQube/SonarCloud)
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run all tests with coverage
      run: |
        # Run both unit and integration tests for complete coverage
        pytest tests/ --cov=smolrouter --cov-report=xml:coverage.xml --cov-report=term-missing

    - name: Display coverage report info
      run: |
        echo "Coverage report generated:"
        ls -la coverage.xml
        echo "Coverage summary:"
        head -20 coverage.xml

    - name: SonarQube/SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    # Note: sonarqube job runs in parallel but is not a dependency since it's optional

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short

    - name: Test CLI functionality
      run: |
        # Test that CLI entry points work
        python -c "from smolrouter.app import app; print('FastAPI app imports successfully')"
        # Test environment variable configuration
        LISTEN_PORT=9999 python -c "from smolrouter.app import LISTEN_PORT; assert LISTEN_PORT == 9999"